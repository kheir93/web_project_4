!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.baseUrl,r=e.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=n,this._headers=r}var n,r;return n=t,(r=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Error ".concat(e.status))}},{key:"getAppInfo",value:function(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}},{key:"getUserInfo",value:function(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then(this._checkResponse)}},{key:"setUserInfo",value:function(e,t){return fetch(this._baseUrl+"/users/me/",{method:"PATCH",headers:this._headers,body:JSON.stringify(e,t)}).then(this._checkResponse)}},{key:"setUserAvatar",value:function(e){var t=e.avatar;return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){return fetch(this._baseUrl+"/cards",{headers:this._headers}).then(this._checkResponse)}},{key:"newCard",value:function(e){var t=e.title,n=e.url;return fetch(this._baseUrl+"/cards",{headers:this._headers,method:"POST",body:JSON.stringify({name:t,link:n})}).then(this._checkResponse)}},{key:"removeCard",value:function(e){return fetch(this._baseUrl+"/cards/"+e,{headers:this._headers,method:"DELETE"}).then(this._checkResponse)}},{key:"addLike",value:function(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"removeLike",value:function(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._defaultFormConfig=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._defaultFormConfig.inputSelector)),this._buttonElement=this._formElement.querySelector(this._defaultFormConfig.formSubmit)}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._defaultFormConfig.inputErrorClass),n.classList.add(this._defaultFormConfig.errorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._defaultFormConfig.inputErrorClass),t.classList.remove(this._defaultFormConfig.errorClass),t.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){if(!e.validity.valid)return this._showInputError(e,e.validationMessage);this._hideInputError(e)}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?this.disableButton():this.enableButton()}},{key:"disableButton",value:function(){this._buttonElement.classList.add(this._defaultFormConfig.formSubmitInactive),this._buttonElement.disabled=!0}},{key:"enableButton",value:function(){this._buttonElement.classList.remove(this._defaultFormConfig.formSubmitInactive),this._buttonElement.disabled=!1}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this.resetValidation(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"resetValidation",value:function(){var e=this;this._formElement.addEventListener("reset",(function(){setTimeout((function(){e._toggleButtonState()})),e._inputList.forEach((function(t){e._hideInputError(t)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n,r){var o=t.data,i=t.handleCardImage,a=t.cardDelete,u=t.deleteModal,c=t.likeOwner;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._likeOwner=c,this._handleCardImage=i,this._cardDelete=a,this._deleteModal=u,this._cardTemplate=n,this._cardElement=this._getTemplate(),this._userId=r,this._link=o.link,this._name=o.name,this._likes=o.likes,this._id=o._id,this._owner=o.owner,this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__caption"),this._cardLike=this._cardElement.querySelector(".card__like-icon"),this._deleteButton=this._cardElement.querySelector(".card__delete"),this.cardLikeActive="card__like-icon_active"}var t,n;return t=e,(n=[{key:"getId",value:function(){return this._id}},{key:"likeOwner",value:function(){var e=this;if(this._likes.some((function(t){return t._id===e._userId})))return this._cardLike.classList.add(this.cardLikeActive)}},{key:"likesCount",value:function(e){this._cardElement.querySelector(".card__like-count").textContent=e}},{key:"handleCardLike",value:function(){var e=this;this._cardLike.addEventListener("click",(function(){e._likeOwner(e.getId())}))}},{key:"isLiked",value:function(){return this._cardLike.classList.contains(this.cardLikeActive)}},{key:"_getTemplate",value:function(){return this._cardElement=document.querySelector(this._cardTemplate).content.querySelector(".card").cloneNode(!0),this._cardElement}},{key:"_setEventListeners",value:function(){var e=this;this._cardImage.addEventListener("click",(function(){e._handleCardImage()})),this.handleCardDelete(),this.handleCardLike()}},{key:"removeCard",value:function(){this._cardElement.remove(".card")}},{key:"handleCardDelete",value:function(){var e=this;this._deleteButton.addEventListener("click",(function(t){t.preventDefault(),e._cardDelete(e.getId())}))}},{key:"generateCard",value:function(){return this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this.handleCardLike(),this.hideBin(),this.likesCount(this._likes.length),this.likeOwner(),this._setEventListeners(),this._cardElement}},{key:"addLike",value:function(){this._cardLike.classList.add(this.cardLikeActive)}},{key:"removeLike",value:function(){this._cardLike.classList.remove(this.cardLikeActive)}},{key:"hideBin",value:function(){this._owner._id!==this._userId&&(this._deleteButton=this._cardElement.querySelector(".card__delete"),this._deleteButton.style.display="none")}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscUp=this._handleEscUp.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscUp",value:function(e){if(e.preventDefault(),"Escape"===e.key)return this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){if(t.target.classList.contains("popup__close-button")||t.target.classList.contains("popup"))return e.close()}))}},{key:"open",value:function(){this._popupElement.classList.add("popup_open"),document.addEventListener("keyup",this._handleEscUp)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_open"),document.removeEventListener("keyup",this._handleEscUp)}}])&&a(t.prototype,n),e}();function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e,t){return!t||"object"!==c(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e,t){var n,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._handleFormSubmit=r,n._popupForm=n._popupElement.querySelector(".form"),n._inputList=n._popupElement.querySelectorAll(".form__input"),n._submitButton=n._popupElement.querySelector(".form__save"),n._initialText=n._submitButton.textContent,n}return t=a,(n=[{key:"loading",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._initialText}},{key:"getInputValues",value:function(){var e=this;return this._inputValues={},this._inputList.forEach((function(t){return e._inputValues[t.name]=t.value})),this._inputValues}},{key:"setEventListeners",value:function(){var e=this;this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e.getInputValues())})),s(h(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){s(h(a.prototype),"close",this).call(this),this._popupForm.reset()}},{key:"submitHandler",value:function(e){this._handleFormSubmit=e}}])&&l(t.prototype,n),a}(u);function _(e){return(_="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function y(e,t){return(y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t){return!t||"object"!==_(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function k(e){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&y(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._link=t._popupElement.querySelector(".place-modal__image"),t._title=t._popupElement.querySelector(".place-modal__caption"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._link.src=t,this._link.alt=n,this._title.textContent=n,v(k(a.prototype),"open",this).call(this)}}])&&m(t.prototype,n),a}(u);function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t,n){var r=t.data,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector("".concat(n))}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&E(t.prototype,n),e}();function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var w=function(){function e(t){var n=t.name,r=t.about,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n,this._about=r,this._avatar=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{profileName:this._name.textContent,profileAbout:this._about.textContent,profileAvatar:this._avatar.src}}},{key:"setUserInfo",value:function(e,t,n){this._name.textContent=e,this._about.textContent=t,this.setUserAvatar({avatar:n})}},{key:"setUserAvatar",value:function(e){var t=e.avatar;this._avatar.src=t}}])&&L(t.prototype,n),e}(),C={popupSelector:".popup",formSelector:".form",formSubmit:".form__save",inputSelector:".form__input",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active",formSubmitInactive:"form__save_inactive"},I=(document.querySelector(".place-modal__image"),document.querySelector(".place-modal__caption"),document.querySelector(".avatar-modal")),O=document.querySelector(".edit-modal"),q=document.querySelector(".add-modal"),U=(document.querySelector(".delete-modal"),document.querySelector(".form__input_avatar"),document.querySelector(".form__input_name")),j=document.querySelector(".form__input_job"),T=(document.querySelector(".form__input_image"),document.querySelector(".form__input_title"),document.querySelector(".form__save"),document.querySelector(".place-modal"),document.querySelector(".profile__avatar-button")),P=document.querySelector(".profile__edit-button"),A=document.querySelector(".profile__avatar"),R=document.querySelector(".profile__name"),B=document.querySelector(".profile__about"),F=document.querySelector(".profile__add-button");function x(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}document.querySelector(".popup"),document.querySelector(".cardTemplate"),document.querySelector(".card"),document.querySelector(".card__image"),document.querySelector(".card__caption"),document.querySelector(".card__delete"),document.querySelector(".elements");var D=new t({baseUrl:"https://around.nomoreparties.co/v1/group-13",headers:{authorization:"4b9bb316-6c12-461f-86a3-76e6af7325ba","Content-Type":"application/json"}}),V=new r(C,I),N=new r(C,O),H=new r(C,q);N.enableValidation(),H.enableValidation(),V.enableValidation();var M=new w({name:R,about:B,avatar:A}),J=new p({handleFormSubmit:function(e){J.loading(!0),D.setUserInfo({name:e.name,about:e.about}).then((function(e){M.setUserInfo(e.name,e.about,e.avatar),J.loading(!1,"loaded!!!"),J.close()})).catch((function(e){return console.log(e)}))}},".edit-modal"),z=new p({handleFormSubmit:function(e){z.loading(!0),D.setUserAvatar({avatar:e.avatar}).then((function(e){M.setUserAvatar(e),z.loading(!1,"loaded!!!"),z.close()})).catch((function(e){return console.log(e)}))}},".avatar-modal"),$=new p({},".delete-modal");$.setEventListeners(),z.setEventListeners(),J.setEventListeners(),T.addEventListener("click",(function(){z.open(),z.loading(!1)})),P.addEventListener("click",(function(){J.open(),J.loading(!1);var e=M.getUserInfo();U.value=e.profileName,j.value=e.profileAbout}));var G=new g(".place-modal");G.setEventListeners(),D.getAppInfo().then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return x(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?x(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],a=r[1],u=o._id;M.setUserInfo(o.name,o.about),M.setUserAvatar(o);var c=new S({data:a,renderer:s},".elements");c.renderItems();var l=new p({handleFormSubmit:function(e){l.loading(!0),D.newCard(e).then((function(e){s(e),l.loading(!1,"Saved"),l.close()})).catch((function(e){return console.log(e)}))}},".add-modal");function s(e){var t=new i({data:e,handleCardImage:function(){G.open(e)},cardDelete:function(e){$.open(),$.submitHandler((function(){$.loading(!0,"Deleting..."),D.removeCard(e).then((function(){t.removeCard(),$.loading(!1),$.close()})).catch((function(e){return console.log(e)}))}))},likeOwner:function(e){t.isLiked()?D.removeLike(e).then((function(e){t.likesCount(e.likes.length),t.removeLike()})).catch((function(e){return console.log(e)})):D.addLike(e).then((function(e){t.likesCount(e.likes.length),t.addLike()})).catch((function(e){return console.log(e)}))}},"#cardTemplate",u);c.addItem(t.generateCard())}l.setEventListeners(),F.addEventListener("click",(function(){l.open(),l.loading(!1)}))})).catch((function(e){return console.log(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,